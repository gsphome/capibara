{"version":3,"mappings":"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","names":["createStoreImpl","createState","state","listeners","setState","partial","replace","nextState","previousState","listener","getState","api","initialState","createStore","GameSettings","x","containerHeight","width","height","bottom","currentPoints","__publicField","useGameStore","set","newMissed","points","newScore","newFillPoints","shouldLevelUp","GameState","callback","vegetable","id","v","gameState","CapybaraPlayer","container","body","use","e","rect","relativeX","capybaraWidth","offset","isDragging","target","touch","newDirection","percentage","VegetableSpawner","deltaTime","level","spawnRate","newVegetables","type","element","svg","baseSpeed","multiplier","ParticleSystem","y","particle","alpha","GameHUD","existingHUD","wrapper","sidebar","hudRow","progressContainer","score","lives","hearts","GameOverScreen","onRestart","title","scoreDisplay","restartButton","won","LevelTransition","PauseOverlay","onShowHelp","onResume","resumeBtn","helpBtn","resume","handleKeyPress","HelpModal","closeBtn","backdrop","close","_AudioManager","initAudio","__async","name","oscillator","gainNode","sound","error","AudioManager","GameEngine","currentState","currentTime","time","newY","playerBounds","__spreadProps","__spreadValues","playerElement","visualFillPercentage","player","vegetableSize","overlapThreshold","xOverlap","yOverlap","requiredOverlap","popup","AudioToggle","existing","enabled","CapybaraCatcherGame","svgSprites","svgContainer","instructions","startButton","helpButton","startGame","initAudioAndStart","audioManager","__vitePreload","AudioManager$1","canvas","gameContainer"],"ignoreList":[0],"sources":["../../node_modules/zustand/esm/vanilla.mjs","../../src/config/GameSettings.ts","../../src/stores/useGameStore.ts","../../src/stores/GameState.ts","../../src/components/game/CapybaraPlayer.ts","../../src/components/game/VegetableSpawner.ts","../../src/components/effects/ParticleSystem.ts","../../src/components/ui/GameHUD.ts","../../src/components/ui/GameOverScreen.ts","../../src/components/ui/LevelTransition.ts","../../src/components/ui/PauseOverlay.ts","../../src/components/ui/HelpModal.ts","../../src/audio/AudioManager.ts","../../src/components/game/GameEngine.ts","../../src/components/ui/AudioToggle.ts","../../src/main.ts"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = ((createState) => createState ? createStoreImpl(createState) : createStoreImpl);\n\nexport { createStore };\n","export class GameSettings {\n  // Screen breakpoints\n  public static readonly MOBILE_BREAKPOINT = 768;\n  \n  // Capybara settings\n  public static readonly CAPYBARA_WIDTH_DESKTOP = 100;\n  public static readonly CAPYBARA_HEIGHT_DESKTOP = 75;\n  public static readonly CAPYBARA_WIDTH_MOBILE = 100;\n  public static readonly CAPYBARA_HEIGHT_MOBILE = 75;\n  public static readonly CAPYBARA_BOTTOM_DESKTOP = 20;\n  public static readonly CAPYBARA_BOTTOM_MOBILE = 10;\n  \n  // Vegetable settings\n  public static readonly VEGETABLE_SIZE_DESKTOP = 50;\n  public static readonly VEGETABLE_SIZE_MOBILE = 40;\n  \n  // Player settings\n  public static readonly PLAYER_SPEED = 8;\n  \n  // Game mechanics\n  public static readonly SPAWN_RATE_BASE = 2000;\n  public static readonly SPAWN_RATE_DECREASE = 100;\n  public static readonly MIN_SPAWN_RATE = 800;\n  public static readonly LEVEL_UP_THRESHOLD = 50;\n  \n  // Audio settings\n  public static readonly AUDIO_ENABLED_DEFAULT = true;\n  public static readonly MASTER_VOLUME = 0.6;\n  \n  // Animation settings\n  public static readonly ANIMATION_DURATION_FAST = 300;\n  public static readonly ANIMATION_DURATION_NORMAL = 600;\n  public static readonly ANIMATION_DURATION_SLOW = 1000;\n  \n  // Performance settings\n  public static readonly REDUCE_ANIMATIONS = false;\n  \n  // Helper methods\n  public static isMobile(): boolean {\n    return window.innerWidth <= this.MOBILE_BREAKPOINT;\n  }\n  \n  public static getCapybaraWidth(): number {\n    return this.isMobile() ? this.CAPYBARA_WIDTH_MOBILE : this.CAPYBARA_WIDTH_DESKTOP;\n  }\n  \n  public static getCapybaraHeight(): number {\n    return this.isMobile() ? this.CAPYBARA_HEIGHT_MOBILE : this.CAPYBARA_HEIGHT_DESKTOP;\n  }\n  \n  public static getCapybaraBottom(): number {\n    return this.isMobile() ? this.CAPYBARA_BOTTOM_MOBILE : this.CAPYBARA_BOTTOM_DESKTOP;\n  }\n  \n  public static getVegetableSize(): number {\n    return this.isMobile() ? this.VEGETABLE_SIZE_MOBILE : this.VEGETABLE_SIZE_DESKTOP;\n  }\n  \n  public static getCapybaraBounds(x: number, containerHeight: number) {\n    const width = this.getCapybaraWidth();\n    const height = this.getCapybaraHeight();\n    const bottom = this.getCapybaraBottom();\n    \n    return {\n      x,\n      y: containerHeight - bottom - height,\n      width,\n      height\n    };\n  }\n  \n  // Calculate visual fill percentage based on current points and threshold\n  public static calculateFillPercentage(currentPoints: number): number {\n    return Math.min(100, (currentPoints / this.LEVEL_UP_THRESHOLD) * 100);\n  }\n  \n  // Calculate actual points needed for level up\n  public static getPointsForLevelUp(): number {\n    return this.LEVEL_UP_THRESHOLD;\n  }\n}","import { createStore } from 'zustand/vanilla';\nimport { GameSettings } from '../config/GameSettings';\n\nexport interface GameState {\n  // Global game state (UI-relevant)\n  level: number;\n  score: number;\n  missedVegetables: number;\n  capybaraFillPercentage: number;\n  gameStatus: 'playing' | 'won' | 'lost' | 'paused';\n  \n  // Game settings (not runtime objects)\n  ceilingHeight: number;\n  \n  // Actions (only for global state)\n  incrementLevel: () => void;\n  incrementMissed: () => void;\n  updateScore: (points: number) => void;\n  resetForNextLevel: () => void;\n  resetGame: () => void;\n  pauseGame: () => void;\n  resumeGame: () => void;\n}\n\nexport const useGameStore = createStore<GameState>()((set) => ({\n  // Initial state\n  level: 1,\n  score: 0,\n  missedVegetables: 0,\n  capybaraFillPercentage: 0,\n  gameStatus: 'playing',\n  ceilingHeight: 100,\n\n  // Actions\n  incrementLevel: () =>\n    set((state) => ({\n      level: state.level + 1,\n      ceilingHeight: Math.max(50, state.ceilingHeight * 0.9),\n    })),\n\n  incrementMissed: () =>\n    set((state) => {\n      const newMissed = state.missedVegetables + 1;\n      return {\n        missedVegetables: newMissed,\n        gameStatus: newMissed >= 3 ? 'lost' : state.gameStatus,\n      };\n    }),\n\n  updateScore: (points: number) =>\n    set((state) => {\n      const newScore = state.score + points;\n      const newFillPoints = state.capybaraFillPercentage + points;\n      const shouldLevelUp = newFillPoints >= GameSettings.LEVEL_UP_THRESHOLD;\n      \n      return {\n        score: newScore,\n        capybaraFillPercentage: shouldLevelUp ? GameSettings.LEVEL_UP_THRESHOLD : newFillPoints,\n        gameStatus: shouldLevelUp ? 'won' : state.gameStatus,\n      };\n    }),\n\n  resetForNextLevel: () =>\n    set(() => ({\n      capybaraFillPercentage: 0,\n      missedVegetables: 0,\n      gameStatus: 'playing',\n    })),\n\n  resetGame: () =>\n    set(() => ({\n      level: 1,\n      score: 0,\n      missedVegetables: 0,\n      capybaraFillPercentage: 0,\n      gameStatus: 'playing',\n      ceilingHeight: 100,\n    })),\n\n  pauseGame: () =>\n    set(() => ({\n      gameStatus: 'paused',\n    })),\n\n  resumeGame: () =>\n    set(() => ({\n      gameStatus: 'playing',\n    })),\n}));","import type { Vegetable } from '../types/game.types';\n\nexport class GameState {\n  public level: number = 1;\n  public score: number = 0;\n  public missedVegetables: number = 0;\n  public capybaraFillPercentage: number = 0;\n  public gameStatus: 'playing' | 'won' | 'lost' | 'paused' = 'playing';\n  public fallSpeed: number = 2;\n  public ceilingHeight: number = 100;\n  public vegetables: Vegetable[] = [];\n  \n  private listeners: Array<() => void> = [];\n\n  public addListener(callback: () => void): void {\n    this.listeners.push(callback);\n  }\n\n  public removeListener(callback: () => void): void {\n    this.listeners = this.listeners.filter(listener => listener !== callback);\n  }\n\n  private notify(): void {\n    this.listeners.forEach(listener => listener());\n  }\n\n  public addVegetable(vegetable: Vegetable): void {\n    this.vegetables.push(vegetable);\n    this.notify();\n  }\n\n  public removeVegetable(id: string): void {\n    this.vegetables = this.vegetables.filter(v => v.id !== id);\n    this.notify();\n  }\n\n  public incrementLevel(): void {\n    this.level += 1;\n    this.fallSpeed *= 1.15;\n    this.ceilingHeight = Math.max(50, this.ceilingHeight * 0.9);\n    this.notify();\n  }\n\n  public incrementMissed(): void {\n    this.missedVegetables += 1;\n    if (this.missedVegetables >= 3) {\n      this.gameStatus = 'lost';\n    }\n    this.notify();\n  }\n\n  public updateScore(points: number): void {\n    this.score += points;\n    this.capybaraFillPercentage = Math.min(100, this.capybaraFillPercentage + points);\n    \n    if (this.capybaraFillPercentage >= 100) {\n      this.gameStatus = 'won';\n      this.incrementLevel();\n    }\n    \n    this.notify();\n  }\n\n  public resetForNextLevel(): void {\n    this.capybaraFillPercentage = 0;\n    this.missedVegetables = 0;\n    this.vegetables = [];\n    this.notify();\n  }\n\n  public resetGame(): void {\n    this.level = 1;\n    this.score = 0;\n    this.missedVegetables = 0;\n    this.capybaraFillPercentage = 0;\n    this.gameStatus = 'playing';\n    this.fallSpeed = 2;\n    this.ceilingHeight = 100;\n    this.vegetables = [];\n    // Don't notify immediately to prevent race conditions\n    setTimeout(() => this.notify(), 100);\n  }\n\n  public pauseGame(): void {\n    this.gameStatus = 'paused';\n    this.notify();\n  }\n\n  public resumeGame(): void {\n    this.gameStatus = 'playing';\n    this.notify();\n  }\n}\n\n// Singleton instance\nexport const gameState = new GameState();","import { gameState } from '../../stores/GameState';\nimport { GameSettings } from '../../config/GameSettings';\n\nexport class CapybaraPlayer {\n  private element!: HTMLElement;\n  private fillElement!: HTMLElement;\n  private svgElement!: SVGElement;\n  private x: number = 0;\n  private lastX: number = 0;\n  private gameContainer: HTMLElement;\n  private readonly speed: number = 8;\n  private direction: 'left' | 'right' = 'right';\n\n  constructor(container: HTMLElement) {\n    this.gameContainer = container;\n    this.x = this.gameContainer.clientWidth / 2 - GameSettings.getCapybaraWidth() / 2;\n    this.lastX = this.x;\n    this.createElement();\n    container.appendChild(this.element);\n    this.setupControls();\n  }\n\n\n\n  private createElement(): void {\n    this.element = document.createElement('div');\n    this.element.className = 'capybara-player';\n    \n    const body = document.createElement('div');\n    body.className = 'capybara-player__body';\n    \n    // Create SVG capybara\n    this.svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.svgElement.setAttribute('class', 'capybara-player__svg');\n    this.svgElement.setAttribute('viewBox', '0 0 80 60');\n    \n    const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '#capybara-right');\n    this.svgElement.appendChild(use);\n    \n    // Fill indicator inside capybara body\n    this.fillElement = document.createElement('div');\n    this.fillElement.className = 'capybara-player__fill';\n    this.fillElement.style.cssText = `\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 0%;\n      background: linear-gradient(45deg, #32CD32, #228B22);\n      border-radius: 50% 50% 40% 40%;\n      transition: height 0.3s ease;\n    `;\n    \n    body.appendChild(this.fillElement);\n    body.appendChild(this.svgElement);\n    this.element.appendChild(body);\n    \n    this.updatePosition();\n  }\n\n  private setupControls(): void {\n    document.addEventListener('keydown', (e) => {\n      if (gameState.gameStatus !== 'playing') return;\n      \n      switch(e.key) {\n        case 'ArrowLeft':\n        case 'a':\n        case 'A':\n          this.moveLeft();\n          break;\n        case 'ArrowRight':\n        case 'd':\n        case 'D':\n          this.moveRight();\n          break;\n      }\n    });\n\n    // Mouse controls\n    document.addEventListener('mousemove', (e) => {\n      if (gameState.gameStatus !== 'playing') return;\n      \n      const rect = this.gameContainer.getBoundingClientRect();\n      const relativeX = e.clientX - rect.left;\n      const capybaraWidth = GameSettings.getCapybaraWidth();\n      const offset = capybaraWidth / 2;\n      this.x = Math.max(0, Math.min(this.gameContainer.clientWidth - capybaraWidth, relativeX - offset));\n      this.updatePosition();\n    });\n\n    // Touch controls - LIMITED TO GAME CONTAINER ONLY\n    let isDragging = false;\n    \n    this.gameContainer.addEventListener('touchstart', (e) => {\n      // Only handle touches on the game area, not UI elements\n      const target = e.target as HTMLElement;\n      if (target.closest('.pause-overlay') || target.closest('.game-over') || target.closest('.level-transition') || target.closest('.audio-toggle')) {\n        return;\n      }\n      \n      isDragging = true;\n      e.preventDefault();\n    }, { passive: false });\n\n    this.gameContainer.addEventListener('touchmove', (e) => {\n      if (!isDragging || gameState.gameStatus !== 'playing') return;\n      \n      // Only handle touches on the game area\n      const target = e.target as HTMLElement;\n      if (target.closest('.pause-overlay') || target.closest('.game-over') || target.closest('.level-transition') || target.closest('.audio-toggle')) {\n        return;\n      }\n      \n      const touch = e.touches[0];\n      const rect = this.gameContainer.getBoundingClientRect();\n      const relativeX = touch.clientX - rect.left;\n      const capybaraWidth = GameSettings.getCapybaraWidth();\n      const offset = capybaraWidth / 2;\n      this.x = Math.max(0, Math.min(this.gameContainer.clientWidth - capybaraWidth, relativeX - offset));\n      this.updatePosition();\n      e.preventDefault();\n    }, { passive: false });\n\n    this.gameContainer.addEventListener('touchend', () => {\n      isDragging = false;\n    });\n  }\n\n  private moveLeft(): void {\n    this.x = Math.max(0, this.x - this.speed);\n    this.updatePosition();\n  }\n\n  private moveRight(): void {\n    const capybaraWidth = GameSettings.getCapybaraWidth();\n    this.x = Math.min(this.gameContainer.clientWidth - capybaraWidth, this.x + this.speed);\n    this.updatePosition();\n  }\n\n  private updatePosition(): void {\n    this.element.style.left = `${this.x}px`;\n    \n    // Update direction based on movement\n    const newDirection = this.x > this.lastX ? 'right' : this.x < this.lastX ? 'left' : this.direction;\n    \n    if (newDirection !== this.direction) {\n      this.direction = newDirection;\n      const use = this.svgElement.querySelector('use');\n      if (use) {\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `#capybara-${this.direction}`);\n      }\n      \n      // Add running animation\n      this.element.classList.add('capybara-player--running');\n      setTimeout(() => {\n        this.element.classList.remove('capybara-player--running');\n      }, 300);\n    }\n    \n    this.lastX = this.x;\n  }\n\n  public updateFill(percentage: number): void {\n    this.fillElement.style.height = `${percentage}%`;\n    \n    // Change color as capybara gets more energy\n    if (percentage >= 80) {\n      this.fillElement.style.background = 'linear-gradient(45deg, #FFD700, #FFA500)';\n    } else if (percentage >= 50) {\n      this.fillElement.style.background = 'linear-gradient(45deg, #ADFF2F, #32CD32)';\n    }\n  }\n\n  public getBounds() {\n    return GameSettings.getCapybaraBounds(this.x, this.gameContainer.clientHeight);\n  }\n\n  public getX(): number {\n    return this.x;\n  }\n\n  public destroy(): void {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n}","import type { Vegetable } from '../../types/game.types';\nimport { GameSettings } from '../../config/GameSettings';\n\nexport class VegetableSpawner {\n  private container: HTMLElement;\n  private spawnTimer: number = 0;\n  private readonly vegetableTypes = ['carrot', 'broccoli', 'lettuce', 'tomato', 'pepper'];\n  private activeVegetables: Map<string, HTMLElement> = new Map();\n\n  constructor(container: HTMLElement) {\n    this.container = container;\n  }\n\n  public update(deltaTime: number, level: number): Vegetable[] {\n    this.spawnTimer += deltaTime;\n    \n    const spawnRate = Math.max(800, 2000 - (level * 100));\n    const newVegetables: Vegetable[] = [];\n    \n    if (this.spawnTimer >= spawnRate) {\n      const vegetable = this.spawnVegetable(level);\n      newVegetables.push(vegetable);\n      this.spawnTimer = 0;\n    }\n\n    return newVegetables;\n  }\n\n  private spawnVegetable(level: number): Vegetable {\n    const type = this.vegetableTypes[Math.floor(Math.random() * this.vegetableTypes.length)];\n    const x = Math.random() * (this.container.clientWidth - GameSettings.getVegetableSize());\n    \n    const vegetable: Vegetable = {\n      id: Date.now().toString() + Math.random(),\n      type: type as any,\n      x,\n      y: -GameSettings.getVegetableSize(),\n      speed: this.calculateVegetableSpeed(type, level),\n      points: this.getVegetablePoints(type)\n    };\n\n    this.createVegetableElement(vegetable);\n    return vegetable;\n  }\n\n  private createVegetableElement(vegetable: Vegetable): void {\n    const element = document.createElement('div');\n    element.className = `vegetable vegetable--${vegetable.type} vegetable--spawning`;\n    element.style.left = `${vegetable.x}px`;\n    element.style.top = `${vegetable.y}px`;\n    element.id = vegetable.id;\n    \n    // Create SVG element\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('viewBox', '0 0 30 30');\n    svg.setAttribute('width', GameSettings.getVegetableSize().toString());\n    svg.setAttribute('height', GameSettings.getVegetableSize().toString());\n    \n    const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `#${vegetable.type}`);\n    \n    svg.appendChild(use);\n    element.appendChild(svg);\n    \n    this.container.appendChild(element);\n    this.activeVegetables.set(vegetable.id, element);\n    \n    // Remove spawn animation class after animation completes\n    setTimeout(() => {\n      element.classList.remove('vegetable--spawning');\n    }, 300);\n  }\n\n  public updateVegetablePosition(vegetable: Vegetable): void {\n    const element = this.activeVegetables.get(vegetable.id);\n    if (element) {\n      element.style.top = `${vegetable.y}px`;\n    }\n  }\n  \n  public reset(): void {\n    // Clear all active vegetables from DOM immediately\n    this.activeVegetables.forEach(element => {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    });\n    this.activeVegetables.clear();\n    \n    // Reset spawn timer to prevent immediate spawning\n    this.spawnTimer = 0;\n  }\n\n  public removeVegetable(id: string): void {\n    const element = this.activeVegetables.get(id);\n    if (element && element.parentNode) {\n      element.parentNode.removeChild(element);\n      this.activeVegetables.delete(id);\n    }\n  }\n\n  private getVegetablePoints(type: string): number {\n    const points: Record<string, number> = {\n      carrot: 5,\n      broccoli: 8,\n      lettuce: 3,\n      tomato: 6,\n      pepper: 10\n    };\n    return points[type] || 5;\n  }\n  \n  private calculateVegetableSpeed(type: string, level: number): number {\n    // Base speed increases with level\n    const baseSpeed = 1.8 + (level * 0.25);\n    \n    // Speed multipliers based on points (risk vs reward)\n    const speedMultipliers: Record<string, number> = {\n      lettuce: 0.8,   // 3 pts - slowest (easy catch, low reward)\n      carrot: 1.0,    // 5 pts - normal speed\n      tomato: 1.1,    // 6 pts - slightly faster\n      broccoli: 1.25, // 8 pts - faster (harder catch, good reward)\n      pepper: 1.4     // 10 pts - fastest (hardest catch, best reward)\n    };\n    \n    const multiplier = speedMultipliers[type] || 1.0;\n    return baseSpeed * multiplier;\n  }\n}","import type { Particle } from '../../types/game.types';\n\nexport class ParticleSystem {\n  private particles: Particle[] = [];\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n\n  constructor(container: HTMLElement) {\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'particle-canvas';\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n    this.canvas.style.position = 'absolute';\n    this.canvas.style.top = '0';\n    this.canvas.style.left = '0';\n    this.canvas.style.pointerEvents = 'none';\n    this.canvas.style.zIndex = '15';\n    \n    container.appendChild(this.canvas);\n    this.ctx = this.canvas.getContext('2d')!;\n\n    window.addEventListener('resize', () => {\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n    });\n  }\n\n  public createCatchEffect(x: number, y: number): void {\n    for (let i = 0; i < 8; i++) {\n      this.particles.push({\n        x: x + 15,\n        y: y + 15,\n        vx: (Math.random() - 0.5) * 6,\n        vy: (Math.random() - 0.5) * 6,\n        life: 30,\n        maxLife: 30,\n        color: `hsl(${Math.random() * 60 + 60}, 70%, 60%)`\n      });\n    }\n  }\n\n  public update(): void {\n    this.particles = this.particles.filter(particle => {\n      particle.x += particle.vx;\n      particle.y += particle.vy;\n      particle.vy += 0.1; // gravity\n      particle.life--;\n      return particle.life > 0;\n    });\n  }\n\n  public render(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    this.particles.forEach(particle => {\n      const alpha = particle.life / particle.maxLife;\n      this.ctx.globalAlpha = alpha;\n      this.ctx.fillStyle = particle.color;\n      this.ctx.fillRect(particle.x, particle.y, 4, 4);\n    });\n    \n    this.ctx.globalAlpha = 1;\n  }\n\n  public destroy(): void {\n    if (this.canvas.parentNode) {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n  }\n}","export class GameHUD {\n  private element!: HTMLElement;\n  private scoreElement!: HTMLElement;\n  private levelElement!: HTMLElement;\n  private missedElement!: HTMLElement;\n  private progressBar!: HTMLElement;\n  private progressFill!: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    // Clear any existing HUD\n    const existingHUD = document.querySelector('.game-hud');\n    if (existingHUD) {\n      existingHUD.remove();\n    }\n    \n    this.createElement();\n    \n    // Check if wrapper already exists\n    let wrapper = document.querySelector('.game-wrapper') as HTMLElement;\n    let sidebar = document.querySelector('.game-sidebar') as HTMLElement;\n    \n    if (!wrapper) {\n      // Create new wrapper and sidebar\n      wrapper = document.createElement('div');\n      wrapper.className = 'game-wrapper';\n      \n      sidebar = document.createElement('div');\n      sidebar.className = 'game-sidebar';\n      \n      sidebar.appendChild(this.element);\n      wrapper.appendChild(sidebar);\n      wrapper.appendChild(container);\n      document.body.appendChild(wrapper);\n    } else if (sidebar) {\n      // Use existing sidebar\n      sidebar.appendChild(this.element);\n    }\n  }\n\n  private createElement(): void {\n    // Main HUD container\n    this.element = document.createElement('div');\n    this.element.className = 'game-hud';\n\n    // Score display\n    this.scoreElement = document.createElement('div');\n    this.scoreElement.className = 'game-hud__score';\n    this.scoreElement.innerHTML = 'Score<br>0';\n\n    // Level display\n    this.levelElement = document.createElement('div');\n    this.levelElement.className = 'game-hud__level';\n    this.levelElement.innerHTML = 'Level<br>1';\n\n    // Lives display\n    this.missedElement = document.createElement('div');\n    this.missedElement.className = 'game-hud__lives';\n    this.updateLives(3);\n\n    // Create row for main buttons\n    const hudRow = document.createElement('div');\n    hudRow.className = 'game-hud__row';\n    \n    hudRow.appendChild(this.scoreElement);\n    hudRow.appendChild(this.levelElement);\n    hudRow.appendChild(this.missedElement);\n    \n    this.element.appendChild(hudRow);\n    \n    // Progress bar in second row\n    const progressContainer = document.createElement('div');\n    progressContainer.className = 'progress-bar';\n    \n    this.progressFill = document.createElement('div');\n    this.progressFill.className = 'progress-bar__fill';\n    this.progressFill.style.width = '0%';\n    \n    progressContainer.appendChild(this.progressFill);\n    this.element.appendChild(progressContainer);\n    \n    this.progressBar = progressContainer;\n\n\n  }\n\n  public updateScore(score: number): void {\n    this.scoreElement.innerHTML = `Score<br>${score}`;\n  }\n\n  public updateLevel(level: number): void {\n    this.levelElement.innerHTML = `Level<br>${level}`;\n  }\n\n  public updateLives(lives: number): void {\n    const hearts = [];\n    for (let i = 0; i < 3; i++) {\n      if (i < lives) {\n        hearts.push('❤️');\n      } else {\n        hearts.push('🤍');\n      }\n    }\n    this.missedElement.innerHTML = hearts.join(' ');\n  }\n\n  public updateProgress(percentage: number): void {\n    this.progressFill.style.width = `${percentage}%`;\n    \n    if (percentage >= 100) {\n      this.progressFill.style.background = 'linear-gradient(90deg, #FFD700, #FFA500)';\n    }\n  }\n\n  public destroy(): void {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n    if (this.progressBar.parentNode) {\n      this.progressBar.parentNode.removeChild(this.progressBar);\n    }\n  }\n}","export class GameOverScreen {\n  private element!: HTMLElement;\n  private onRestart: () => void;\n\n  constructor(container: HTMLElement, onRestart: () => void) {\n    this.onRestart = onRestart;\n    this.createElement();\n    container.appendChild(this.element);\n    this.hide(); // Start hidden\n  }\n\n  private createElement(): void {\n    this.element = document.createElement('div');\n    this.element.className = 'game-over';\n\n    const title = document.createElement('h1');\n    title.className = 'game-over__title';\n    \n    const scoreDisplay = document.createElement('div');\n    scoreDisplay.className = 'game-over__score';\n    \n    const restartButton = document.createElement('button');\n    restartButton.className = 'game-over__button';\n    restartButton.textContent = 'Play Again';\n    restartButton.addEventListener('click', this.onRestart);\n\n    this.element.appendChild(title);\n    this.element.appendChild(scoreDisplay);\n    this.element.appendChild(restartButton);\n  }\n\n  public show(won: boolean, score: number, level: number): void {\n    const title = this.element.querySelector('.game-over__title') as HTMLElement;\n    const scoreDisplay = this.element.querySelector('.game-over__score') as HTMLElement;\n    \n    if (won) {\n      title.textContent = '🎉 You Win! 🎉';\n      title.style.color = '#FFD700';\n      scoreDisplay.textContent = `Capybara has full energy! Final Score: ${score} (Level ${level})`;\n    } else {\n      title.textContent = '💔 Game Over 💔';\n      title.style.color = '#FF4444';\n      scoreDisplay.textContent = `Too many vegetables missed! Final Score: ${score} (Level ${level})`;\n    }\n    \n    this.element.style.display = 'flex';\n  }\n\n  public hide(): void {\n    this.element.style.display = 'none';\n  }\n\n  public destroy(): void {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n}","export class LevelTransition {\n  private element!: HTMLElement;\n\n  private container: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    this.container = container;\n  }\n\n  public show(level: number): void {\n    console.log(`🎉 ¡Pasaste al nivel ${level}! ¡Felicidades!`);\n    this.createElement(level);\n    this.container.appendChild(this.element);\n    \n    setTimeout(() => {\n      this.element.classList.add('level-transition--show');\n    }, 50);\n    \n    setTimeout(() => {\n      this.hide();\n    }, 2000);\n  }\n\n  private createElement(level: number): void {\n    this.element = document.createElement('div');\n    this.element.className = 'level-transition';\n    this.element.innerHTML = `\n      <div class=\"level-transition__content\">\n        <h1>Level ${level}</h1>\n        <p>Let's go!</p>\n      </div>\n    `;\n  }\n\n  private hide(): void {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n}","export class PauseOverlay {\n  private element!: HTMLElement;\n  private container: HTMLElement;\n  private onShowHelp?: () => void;\n\n  constructor(container: HTMLElement, onShowHelp?: () => void) {\n    this.container = container;\n    this.onShowHelp = onShowHelp;\n  }\n\n  public show(onResume: () => void): void {\n    this.createElement(onResume);\n    this.container.appendChild(this.element);\n    \n    setTimeout(() => {\n      this.element.classList.add('pause-overlay--show');\n    }, 50);\n  }\n\n  public hide(): void {\n    if (this.element) {\n      this.element.classList.remove('pause-overlay--show');\n      setTimeout(() => {\n        if (this.element && this.element.parentNode) {\n          this.element.parentNode.removeChild(this.element);\n        }\n      }, 300);\n    }\n  }\n\n  private createElement(onResume: () => void): void {\n    this.element = document.createElement('div');\n    this.element.className = 'pause-overlay';\n    \n    this.element.innerHTML = `\n      <div class=\"pause-overlay__backdrop\"></div>\n      <div class=\"pause-overlay__content\">\n        <div class=\"pause-overlay__icon\">⏸️</div>\n        <h2>Game Paused</h2>\n        <p>Take a break! The capybara is waiting for you.</p>\n        <button class=\"pause-overlay__resume-btn\">\n          ▶️ Resume Game\n        </button>\n        <div class=\"pause-overlay__hint\">\n          <small>💡 Tip: Press SPACE to pause/resume anytime</small>\n          <br>\n          <button class=\"pause-overlay__help-btn\" id=\"pauseHelpBtn\">\n            🥕 Vegetable Guide\n          </button>\n        </div>\n      </div>\n    `;\n\n    const resumeBtn = this.element.querySelector('.pause-overlay__resume-btn') as HTMLButtonElement;\n    const helpBtn = this.element.querySelector('#pauseHelpBtn') as HTMLButtonElement;\n    \n    const resume = () => {\n      this.hide();\n      onResume();\n    };\n\n    resumeBtn.addEventListener('click', resume);\n    resumeBtn.addEventListener('touchend', (e) => {\n      e.preventDefault();\n      resume();\n    });\n    \n    if (helpBtn && this.onShowHelp) {\n      helpBtn.addEventListener('click', this.onShowHelp);\n    }\n\n    // Resume with spacebar\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        resume();\n        document.removeEventListener('keydown', handleKeyPress);\n      }\n    };\n    \n    document.addEventListener('keydown', handleKeyPress);\n  }\n}","export class HelpModal {\n  private element!: HTMLElement;\n\n  constructor() {\n  }\n\n  public show(): void {\n    this.createElement();\n    document.body.appendChild(this.element);\n    \n    setTimeout(() => {\n      this.element.classList.add('help-modal--show');\n    }, 50);\n  }\n\n  public hide(): void {\n    if (this.element) {\n      this.element.classList.remove('help-modal--show');\n      setTimeout(() => {\n        if (this.element && this.element.parentNode) {\n          this.element.parentNode.removeChild(this.element);\n        }\n      }, 300);\n    }\n  }\n\n  private createElement(): void {\n    this.element = document.createElement('div');\n    this.element.className = 'help-modal';\n    \n    this.element.innerHTML = `\n      <div class=\"help-modal__backdrop\"></div>\n      <div class=\"help-modal__content\">\n        <div class=\"help-modal__header\">\n          <h2>🥕 Vegetable Guide</h2>\n          <button class=\"help-modal__close\">✕</button>\n        </div>\n        \n        <div class=\"help-modal__body\">\n          <div class=\"vegetable-grid\">\n            <div class=\"vegetable-card\">\n              <div class=\"vegetable-icon\">🥕</div>\n              <div class=\"vegetable-name\">Carrot</div>\n              <div class=\"vegetable-points\">5 Points</div>\n            </div>\n            \n            <div class=\"vegetable-card\">\n              <div class=\"vegetable-icon\">🥦</div>\n              <div class=\"vegetable-name\">Broccoli</div>\n              <div class=\"vegetable-points\">8 Points</div>\n            </div>\n            \n            <div class=\"vegetable-card\">\n              <div class=\"vegetable-icon\">🥬</div>\n              <div class=\"vegetable-name\">Lettuce</div>\n              <div class=\"vegetable-points\">3 Points</div>\n            </div>\n            \n            <div class=\"vegetable-card\">\n              <div class=\"vegetable-icon\">🍅</div>\n              <div class=\"vegetable-name\">Tomato</div>\n              <div class=\"vegetable-points\">6 Points</div>\n            </div>\n            \n            <div class=\"vegetable-card\">\n              <div class=\"vegetable-icon\">🌶️</div>\n              <div class=\"vegetable-name\">Bell Pepper</div>\n              <div class=\"vegetable-points\">10 Points</div>\n            </div>\n          </div>\n          \n          <div class=\"help-tips\">\n            <h3>💡 Pro Tips</h3>\n            <ul>\n              <li>Focus on Bell Peppers (10 pts) for maximum score</li>\n              <li>Don't miss 3 vegetables or it's game over!</li>\n              <li>Fill the capybara to 100% to advance levels</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    `;\n\n    const closeBtn = this.element.querySelector('.help-modal__close') as HTMLButtonElement;\n    const backdrop = this.element.querySelector('.help-modal__backdrop') as HTMLElement;\n    \n    const close = () => this.hide();\n    \n    closeBtn.addEventListener('click', close);\n    backdrop.addEventListener('click', close);\n    \n    // Close with Escape key\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        close();\n        document.removeEventListener('keydown', handleKeyPress);\n      }\n    };\n    \n    document.addEventListener('keydown', handleKeyPress);\n  }\n}","export class AudioManager {\n  private static instance: AudioManager;\n  private enabled: boolean = true;\n  private audioContext: AudioContext | null = null;\n  private initialized: boolean = false;\n  \n  private constructor() {\n    this.setupMobileAudioInit();\n  }\n  \n  public static getInstance(): AudioManager {\n    if (!AudioManager.instance) {\n      AudioManager.instance = new AudioManager();\n    }\n    return AudioManager.instance;\n  }\n  \n  private setupMobileAudioInit(): void {\n    // Auto-initialize audio on first user interaction (Safari mobile fix)\n    const initAudio = async () => {\n      if (!this.initialized) {\n        await this.init();\n        this.initialized = true;\n        // Remove listeners after first init\n        document.removeEventListener('touchstart', initAudio);\n        document.removeEventListener('click', initAudio);\n      }\n    };\n    \n    document.addEventListener('touchstart', initAudio, { once: true });\n    document.addEventListener('click', initAudio, { once: true });\n  }\n  \n  public async play(name: string): Promise<void> {\n    if (!this.enabled) return;\n    \n    try {\n      // Initialize if not done yet\n      if (!this.initialized) {\n        await this.init();\n        this.initialized = true;\n      }\n      \n      // Reuse existing context or create new one\n      if (!this.audioContext || this.audioContext.state === 'closed') {\n        this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      }\n      \n      // Resume context if suspended (Safari mobile requirement)\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      \n      // Double-check context is running\n      if (this.audioContext.state !== 'running') {\n        console.warn('AudioContext not running, skipping sound');\n        return;\n      }\n      \n      const oscillator = this.audioContext.createOscillator();\n      const gainNode = this.audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(this.audioContext.destination);\n      \n      const sounds = {\n        catch: { freq: 800, duration: 0.1 },\n        miss: { freq: 200, duration: 0.2 },\n        levelup: { freq: 1000, duration: 0.3 },\n        gameover: { freq: 150, duration: 0.5 },\n        click: { freq: 600, duration: 0.05 }\n      };\n      \n      const sound = sounds[name as keyof typeof sounds];\n      if (!sound) return;\n      \n      oscillator.frequency.value = sound.freq;\n      oscillator.type = 'sine';\n      \n      gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n      gainNode.gain.linearRampToValueAtTime(0.3, this.audioContext.currentTime + 0.01);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + sound.duration);\n      \n      oscillator.start();\n      oscillator.stop(this.audioContext.currentTime + sound.duration);\n    } catch (error) {\n      console.warn('Audio playback failed:', error);\n    }\n  }\n  \n  public toggle(): boolean {\n    this.enabled = !this.enabled;\n    return this.enabled;\n  }\n  \n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n  \n  public async init(): Promise<void> {\n    try {\n      // Initialize context on first user interaction\n      if (!this.audioContext) {\n        this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n        \n        // Ensure context is running\n        if (this.audioContext.state === 'suspended') {\n          await this.audioContext.resume();\n        }\n      }\n    } catch (error) {\n      console.warn('Audio initialization failed:', error);\n    }\n  }\n}","import { useGameStore } from '../../stores/useGameStore';\nimport type { GameState } from '../../stores/useGameStore';\nimport { GameSettings } from '../../config/GameSettings';\nimport { CapybaraPlayer } from './CapybaraPlayer';\nimport { VegetableSpawner } from './VegetableSpawner';\nimport { ParticleSystem } from '../effects/ParticleSystem';\nimport { GameHUD } from '../ui/GameHUD';\nimport { GameOverScreen } from '../ui/GameOverScreen';\nimport { LevelTransition } from '../ui/LevelTransition';\nimport { PauseOverlay } from '../ui/PauseOverlay';\nimport { HelpModal } from '../ui/HelpModal';\n\nimport { AudioManager } from '../../audio/AudioManager';\nimport type { Vegetable } from '../../types/game.types';\n\nexport class GameEngine {\n  private container: HTMLElement;\n  private player!: CapybaraPlayer;\n  private spawner!: VegetableSpawner;\n  private particles!: ParticleSystem;\n  private hud!: GameHUD;\n  private gameOverScreen!: GameOverScreen;\n  private levelTransition!: LevelTransition;\n  private pauseOverlay!: PauseOverlay;\n  private helpModal!: HelpModal;\n\n  private audioManager = AudioManager.getInstance();\n  private animationId: number = 0;\n  private lastTime: number = 0;\n  private vegetables: Vegetable[] = [];\n  private gameStore = useGameStore;\n\n  constructor(container: HTMLElement) {\n    this.container = container;\n    this.init();\n  }\n\n  private init(): void {\n    // Initialize game components\n    this.player = new CapybaraPlayer(this.container);\n    this.spawner = new VegetableSpawner(this.container);\n    this.particles = new ParticleSystem(this.container);\n    this.hud = new GameHUD(this.container);\n    this.gameOverScreen = new GameOverScreen(this.container, () => this.restart());\n    this.levelTransition = new LevelTransition(this.container);\n    this.pauseOverlay = new PauseOverlay(this.container, () => this.helpModal.show());\n    this.helpModal = new HelpModal();\n\n\n    // Subscribe to Zustand store changes\n    useGameStore.subscribe((state) => this.handleGameStateChange(state));\n\n    // Start game loop\n    this.gameLoop(0);\n\n    // Setup keyboard controls\n    this.setupKeyboardControls();\n  }\n\n  private levelTransitionActive = false;\n\n  private handleGameStateChange(state: GameState): void {\n    if (state.gameStatus === 'paused') {\n      this.pauseOverlay.show(() => this.gameStore.getState().resumeGame());\n    } else if (state.gameStatus === 'playing') {\n      this.pauseOverlay.hide();\n    } else if (state.gameStatus === 'won' && !this.levelTransitionActive) {\n      this.levelTransitionActive = true;\n      this.audioManager.play('levelup');\n      \n      // CRITICAL: Clear vegetables IMMEDIATELY to stop all collision detection\n      this.clearAllVegetables();\n      \n      this.levelTransition.show(state.level + 1);\n      \n      setTimeout(() => {\n        this.gameStore.getState().incrementLevel();\n        this.gameStore.getState().resetForNextLevel();\n        this.levelTransitionActive = false;\n      }, 2000);\n    } else if (state.gameStatus === 'lost') {\n      this.audioManager.play('gameover');\n      this.gameOverScreen.show(false, state.score, state.level);\n    }\n  }\n\n  private setupKeyboardControls(): void {\n    document.addEventListener('keydown', (e) => {\n      switch(e.key) {\n        case ' ':\n        case 'Escape':\n          e.preventDefault();\n          const currentState = this.gameStore.getState();\n          if (currentState.gameStatus === 'playing') {\n            currentState.pauseGame();\n          } else if (currentState.gameStatus === 'paused') {\n            currentState.resumeGame();\n          }\n          break;\n        case 'r':\n        case 'R':\n          const state = this.gameStore.getState();\n          if (state.gameStatus === 'lost' || state.gameStatus === 'won') {\n            this.restart();\n          }\n          break;\n      }\n    });\n  }\n\n  private gameLoop(currentTime: number): void {\n    const deltaTime = currentTime - this.lastTime;\n    this.lastTime = currentTime;\n\n    const currentState = this.gameStore.getState();\n    \n    // CRITICAL: Only update game logic when actually playing\n    if (currentState.gameStatus === 'playing' && !this.levelTransitionActive) {\n      this.update(deltaTime);\n      this.render();\n    } else if (currentState.gameStatus === 'paused') {\n      // Game is paused, don't update but keep rendering\n    }\n    // During level transition or other states: NO game logic updates\n\n    this.animationId = requestAnimationFrame((time) => this.gameLoop(time));\n  }\n\n  private update(deltaTime: number): void {\n    const state = this.gameStore.getState();\n    \n    // SAFETY: Double-check we should be updating\n    if (state.gameStatus !== 'playing' || this.levelTransitionActive) {\n      return; // Abort update if not in playing state\n    }\n    \n    // Spawn new vegetables\n    const newVegetables = this.spawner.update(deltaTime, state.level);\n    this.vegetables.push(...newVegetables);\n\n    // Update existing vegetables\n    this.vegetables = this.vegetables.filter(vegetable => {\n      // Create new position to avoid mutation\n      const newY = vegetable.y + vegetable.speed;\n      \n      // CRITICAL: Check if we're still in playing state before any game logic\n      const currentGameState = this.gameStore.getState();\n      if (currentGameState.gameStatus !== 'playing' || this.levelTransitionActive) {\n        // Game state changed during this frame - remove vegetable silently\n        this.spawner.removeVegetable(vegetable.id);\n        return false;\n      }\n      \n      // Check collision BEFORE updating position\n      const playerBounds = this.player.getBounds();\n      if (this.checkCollision(playerBounds, { ...vegetable, y: newY })) {\n        // Caught vegetable\n        this.audioManager.play('catch');\n        state.updateScore(vegetable.points);\n        this.particles.createCatchEffect(vegetable.x, newY);\n        this.spawner.removeVegetable(vegetable.id);\n        \n        // Add bounce animation to player\n        const playerElement = this.container.querySelector('.capybara-player');\n        if (playerElement) {\n          playerElement.classList.add('capybara-player--catch');\n          setTimeout(() => {\n            playerElement.classList.remove('capybara-player--catch');\n          }, 600);\n        }\n        \n        // Score popup animation\n        this.createScorePopup(vegetable.x, newY, vegetable.points);\n        \n        return false; // Remove from array\n      }\n\n      // Check if vegetable will fall off screen\n      if (newY > this.container.clientHeight) {\n        this.audioManager.play('miss');\n        state.incrementMissed();\n        this.spawner.removeVegetable(vegetable.id);\n        return false; // Remove from array\n      }\n\n      // Update position only if vegetable continues\n      vegetable.y = newY;\n      this.spawner.updateVegetablePosition(vegetable);\n      \n      return true; // Keep in array\n    });\n\n    // Update particles\n    this.particles.update();\n\n    // Update UI with current state\n    const currentState = this.gameStore.getState();\n    this.hud.updateScore(currentState.score);\n    this.hud.updateLevel(currentState.level);\n    this.hud.updateLives(3 - currentState.missedVegetables);\n    \n    // Calculate visual fill percentage\n    const visualFillPercentage = GameSettings.calculateFillPercentage(currentState.capybaraFillPercentage);\n    this.hud.updateProgress(visualFillPercentage);\n    this.player.updateFill(visualFillPercentage);\n  }\n\n  private render(): void {\n    this.particles.render();\n  }\n\n  private checkCollision(player: any, vegetable: Vegetable): boolean {\n    const vegetableSize = GameSettings.getVegetableSize();\n    const overlapThreshold = 0.3; // 30% overlap required\n    \n    // Calculate overlap areas using min/max\n    const xOverlap = Math.max(0, Math.min(player.x + player.width, vegetable.x + vegetableSize) - Math.max(player.x, vegetable.x));\n    const yOverlap = Math.max(0, Math.min(player.y + player.height, vegetable.y + vegetableSize) - Math.max(player.y, vegetable.y));\n    \n    // Calculate minimum overlap required (30% of smaller object)\n    const minArea = Math.min(player.width * player.height, vegetableSize * vegetableSize);\n    const requiredOverlap = minArea * overlapThreshold;\n    \n    // Check if actual overlap meets threshold\n    const actualOverlap = xOverlap * yOverlap;\n    \n    return actualOverlap >= requiredOverlap;\n  }\n\n  private clearAllVegetables(): void {\n    // CRITICAL: Clear game engine array FIRST to stop collision detection\n    this.vegetables = [];\n    \n    // Then clean up DOM and spawner\n    this.spawner.reset();\n  }\n\n  private restart(): void {\n    // Clear all vegetables\n    this.clearAllVegetables();\n    \n    // Reset game state\n    this.gameStore.getState().resetGame();\n    \n    // Hide game over screen\n    this.gameOverScreen.hide();\n    \n    // Reset UI\n    this.hud.updateScore(0);\n    this.hud.updateLevel(1);\n    this.hud.updateLives(3);\n    this.hud.updateProgress(0);\n    this.player.updateFill(0);\n  }\n\n  private createScorePopup(x: number, y: number, points: number): void {\n    const popup = document.createElement('div');\n    popup.className = 'score-popup';\n    popup.textContent = `+${points}`;\n    popup.style.cssText = `\n      position: absolute;\n      left: ${x}px;\n      top: ${y}px;\n      color: #FFD700;\n      font-weight: bold;\n      font-size: 1.2rem;\n      pointer-events: none;\n      z-index: 1000;\n    `;\n    \n    this.container.appendChild(popup);\n    \n    setTimeout(() => {\n      if (popup.parentNode) {\n        popup.parentNode.removeChild(popup);\n      }\n    }, 1000);\n  }\n\n  public destroy(): void {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n    \n    this.player.destroy();\n    this.particles.destroy();\n    this.hud.destroy();\n    this.gameOverScreen.destroy();\n\n  }\n}","import { AudioManager } from '../../audio/AudioManager';\n\nexport class AudioToggle {\n  private element!: HTMLElement;\n  private audioManager = AudioManager.getInstance();\n  \n  constructor(container: HTMLElement) {\n    // Remove any existing audio toggle first\n    const existing = container.querySelector('.audio-toggle');\n    if (existing) {\n      existing.remove();\n    }\n    \n    this.createElement();\n    container.appendChild(this.element);\n  }\n  \n  private createElement(): void {\n    this.element = document.createElement('button');\n    this.element.className = 'audio-toggle';\n    this.element.innerHTML = '🔊';\n    this.element.style.cssText = `\n      position: fixed;\n      top: max(10px, env(safe-area-inset-top) + 5px);\n      right: max(10px, env(safe-area-inset-right) + 5px);\n      background: rgba(0,0,0,0.8);\n      border: 1px solid rgba(255,255,255,0.3);\n      border-radius: 50%;\n      width: 44px;\n      height: 44px;\n      font-size: 1.2rem;\n      cursor: pointer;\n      z-index: 1000;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(10px);\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      touch-action: manipulation;\n    `;\n    \n    // Prevent event bubbling to avoid conflicts\n    this.element.addEventListener('click', (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      this.toggleAudio();\n    });\n    \n    this.element.addEventListener('touchend', (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      this.toggleAudio();\n    });\n    \n    this.element.addEventListener('mouseenter', () => {\n      this.element.style.transform = 'scale(1.1)';\n    });\n    \n    this.element.addEventListener('mouseleave', () => {\n      this.element.style.transform = 'scale(1)';\n    });\n  }\n  \n  private async toggleAudio(): Promise<void> {\n    try {\n      const enabled = this.audioManager.toggle();\n      this.element.innerHTML = enabled ? '🔊' : '🔇';\n      this.element.style.opacity = enabled ? '1' : '0.6';\n      \n      if (enabled) {\n        await this.audioManager.init();\n        await this.audioManager.play('click');\n      }\n    } catch (error) {\n      console.warn('Audio toggle failed:', error);\n    }\n  }\n  \n  public destroy(): void {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n}","import './styles/game.css';\nimport { GameEngine } from './components/game/GameEngine';\nimport { HelpModal } from './components/ui/HelpModal';\nimport { AudioToggle } from './components/ui/AudioToggle';\n\nclass CapybaraCatcherGame {\n  private gameEngine: GameEngine | null = null;\n  private container!: HTMLElement;\n  private helpModal!: HelpModal;\n  // @ts-ignore - Keep reference to prevent garbage collection\n  private _audioToggle!: AudioToggle;\n\n  constructor() {\n    this.init();\n  }\n\n  private init(): void {\n    // Load SVG sprites first\n    this.loadSVGSprites();\n    \n    // Create game container\n    this.container = document.createElement('div');\n    this.container.className = 'capybara-game';\n    \n    // Initialize help modal and audio toggle\n    this.helpModal = new HelpModal();\n    this._audioToggle = new AudioToggle(document.body);\n    \n    // Add instructions\n    this.showInstructions();\n    \n    document.body.appendChild(this.container);\n  }\n\n  private loadSVGSprites(): void {\n    // Inline SVG sprites for better compatibility\n    const svgSprites = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\n        <!-- Capybara Sprites -->\n        <symbol id=\"capybara-right\" viewBox=\"0 0 80 60\">\n          <!-- Body -->\n          <ellipse cx=\"40\" cy=\"35\" rx=\"25\" ry=\"18\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1.5\"/>\n          <ellipse cx=\"40\" cy=\"35\" rx=\"22\" ry=\"15\" fill=\"#DEB887\"/>\n          <ellipse class=\"body-fill\" cx=\"40\" cy=\"35\" rx=\"20\" ry=\"13\" fill=\"#32CD32\" opacity=\"0\" style=\"transition: opacity 0.3s ease;\"/>\n          \n          <!-- Head -->\n          <ellipse cx=\"62\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1.5\"/>\n          <ellipse cx=\"62\" cy=\"25\" rx=\"14\" ry=\"12\" fill=\"#DEB887\"/>\n          \n          <!-- Snout -->\n          <ellipse cx=\"75\" cy=\"28\" rx=\"6\" ry=\"4\" fill=\"#DEB887\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          <ellipse cx=\"75\" cy=\"28\" rx=\"4\" ry=\"2.5\" fill=\"#F5DEB3\"/>\n          \n          <!-- Nostrils -->\n          <ellipse cx=\"78\" cy=\"27\" rx=\"1\" ry=\"0.8\" fill=\"#8B4513\"/>\n          <ellipse cx=\"78\" cy=\"29\" rx=\"1\" ry=\"0.8\" fill=\"#8B4513\"/>\n          \n          <!-- Ears -->\n          <ellipse cx=\"55\" cy=\"16\" rx=\"3\" ry=\"5\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          <ellipse cx=\"69\" cy=\"16\" rx=\"3\" ry=\"5\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          <ellipse cx=\"55\" cy=\"17\" rx=\"1.5\" ry=\"3\" fill=\"#F5DEB3\"/>\n          <ellipse cx=\"69\" cy=\"17\" rx=\"1.5\" ry=\"3\" fill=\"#F5DEB3\"/>\n          \n          <!-- Eyes (larger and cuter) -->\n          <circle cx=\"58\" cy=\"22\" r=\"4\" fill=\"#000\"/>\n          <circle cx=\"70\" cy=\"22\" r=\"4\" fill=\"#000\"/>\n          <circle cx=\"59\" cy=\"20.5\" r=\"1.5\" fill=\"#FFF\"/>\n          <circle cx=\"71\" cy=\"20.5\" r=\"1.5\" fill=\"#FFF\"/>\n          <circle cx=\"59.5\" cy=\"21\" r=\"0.5\" fill=\"#FFF\"/>\n          <circle cx=\"71.5\" cy=\"21\" r=\"0.5\" fill=\"#FFF\"/>\n          \n          <!-- Mouth (subtle smile) -->\n          <path d=\"M72 31 Q75 33 78 31\" stroke=\"#8B4513\" stroke-width=\"1\" fill=\"none\"/>\n          \n          <!-- Legs -->\n          <g class=\"legs-right\">\n            <ellipse cx=\"30\" cy=\"48\" rx=\"4\" ry=\"8\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n            <ellipse cx=\"42\" cy=\"50\" rx=\"4\" ry=\"6\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n            <ellipse cx=\"54\" cy=\"48\" rx=\"4\" ry=\"8\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n            <ellipse cx=\"66\" cy=\"50\" rx=\"4\" ry=\"6\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          </g>\n          \n          <!-- Tail -->\n          <circle cx=\"18\" cy=\"32\" r=\"3\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n        </symbol>\n        \n        <symbol id=\"capybara-left\" viewBox=\"0 0 80 60\">\n          <!-- Body -->\n          <ellipse cx=\"40\" cy=\"35\" rx=\"25\" ry=\"18\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1.5\"/>\n          <ellipse cx=\"40\" cy=\"35\" rx=\"22\" ry=\"15\" fill=\"#DEB887\"/>\n          <ellipse class=\"body-fill\" cx=\"40\" cy=\"35\" rx=\"20\" ry=\"13\" fill=\"#32CD32\" opacity=\"0\" style=\"transition: opacity 0.3s ease;\"/>\n          \n          <!-- Head -->\n          <ellipse cx=\"18\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1.5\"/>\n          <ellipse cx=\"18\" cy=\"25\" rx=\"14\" ry=\"12\" fill=\"#DEB887\"/>\n          \n          <!-- Snout -->\n          <ellipse cx=\"5\" cy=\"28\" rx=\"6\" ry=\"4\" fill=\"#DEB887\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          <ellipse cx=\"5\" cy=\"28\" rx=\"4\" ry=\"2.5\" fill=\"#F5DEB3\"/>\n          \n          <!-- Nostrils -->\n          <ellipse cx=\"2\" cy=\"27\" rx=\"1\" ry=\"0.8\" fill=\"#8B4513\"/>\n          <ellipse cx=\"2\" cy=\"29\" rx=\"1\" ry=\"0.8\" fill=\"#8B4513\"/>\n          \n          <!-- Ears -->\n          <ellipse cx=\"11\" cy=\"16\" rx=\"3\" ry=\"5\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          <ellipse cx=\"25\" cy=\"16\" rx=\"3\" ry=\"5\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          <ellipse cx=\"11\" cy=\"17\" rx=\"1.5\" ry=\"3\" fill=\"#F5DEB3\"/>\n          <ellipse cx=\"25\" cy=\"17\" rx=\"1.5\" ry=\"3\" fill=\"#F5DEB3\"/>\n          \n          <!-- Eyes (larger and cuter) -->\n          <circle cx=\"10\" cy=\"22\" r=\"4\" fill=\"#000\"/>\n          <circle cx=\"22\" cy=\"22\" r=\"4\" fill=\"#000\"/>\n          <circle cx=\"9\" cy=\"20.5\" r=\"1.5\" fill=\"#FFF\"/>\n          <circle cx=\"21\" cy=\"20.5\" r=\"1.5\" fill=\"#FFF\"/>\n          <circle cx=\"8.5\" cy=\"21\" r=\"0.5\" fill=\"#FFF\"/>\n          <circle cx=\"20.5\" cy=\"21\" r=\"0.5\" fill=\"#FFF\"/>\n          \n          <!-- Mouth (subtle smile) -->\n          <path d=\"M2 31 Q5 33 8 31\" stroke=\"#8B4513\" stroke-width=\"1\" fill=\"none\"/>\n          \n          <!-- Legs -->\n          <g class=\"legs-left\">\n            <ellipse cx=\"14\" cy=\"50\" rx=\"4\" ry=\"6\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n            <ellipse cx=\"26\" cy=\"48\" rx=\"4\" ry=\"8\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n            <ellipse cx=\"38\" cy=\"50\" rx=\"4\" ry=\"6\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n            <ellipse cx=\"50\" cy=\"48\" rx=\"4\" ry=\"8\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n          </g>\n          \n          <!-- Tail -->\n          <circle cx=\"62\" cy=\"32\" r=\"3\" fill=\"#CD853F\" stroke=\"#8B4513\" stroke-width=\"1\"/>\n        </symbol>\n        \n        <!-- Vegetable Sprites -->\n        <symbol id=\"carrot\" viewBox=\"0 0 30 30\">\n          <path d=\"M15 2 L12 8 L8 12 L10 18 L15 28 L20 18 L22 12 L18 8 Z\" \n                fill=\"#FF8C00\" stroke=\"#E67300\" stroke-width=\"1\"/>\n          <path d=\"M15 2 L13 6 L11 10 L12 16 L15 24 L18 16 L19 10 L17 6 Z\" \n                fill=\"#FFA500\"/>\n          <path d=\"M15 2 Q12 0 10 2 Q13 1 15 2\" fill=\"#228B22\"/>\n          <path d=\"M15 2 Q18 0 20 2 Q17 1 15 2\" fill=\"#228B22\"/>\n          <path d=\"M15 2 Q14 -1 16 1 Q15 0 15 2\" fill=\"#32CD32\"/>\n        </symbol>\n        \n        <symbol id=\"broccoli\" viewBox=\"0 0 30 30\">\n          <rect x=\"13\" y=\"20\" width=\"4\" height=\"8\" fill=\"#90EE90\" rx=\"2\"/>\n          <circle cx=\"15\" cy=\"12\" r=\"6\" fill=\"#228B22\"/>\n          <circle cx=\"11\" cy=\"10\" r=\"4\" fill=\"#32CD32\"/>\n          <circle cx=\"19\" cy=\"10\" r=\"4\" fill=\"#32CD32\"/>\n          <circle cx=\"9\" cy=\"15\" r=\"3\" fill=\"#228B22\"/>\n          <circle cx=\"21\" cy=\"15\" r=\"3\" fill=\"#228B22\"/>\n          <circle cx=\"15\" cy=\"8\" r=\"3\" fill=\"#006400\"/>\n          <circle cx=\"12\" cy=\"16\" r=\"2.5\" fill=\"#32CD32\"/>\n          <circle cx=\"18\" cy=\"16\" r=\"2.5\" fill=\"#32CD32\"/>\n          <circle cx=\"15\" cy=\"12\" r=\"2\" fill=\"#006400\"/>\n          <circle cx=\"13\" cy=\"9\" r=\"1.5\" fill=\"#228B22\"/>\n          <circle cx=\"17\" cy=\"9\" r=\"1.5\" fill=\"#228B22\"/>\n        </symbol>\n        \n        <symbol id=\"lettuce\" viewBox=\"0 0 30 30\">\n          <path d=\"M15 5 Q8 8 6 15 Q8 22 15 25 Q22 22 24 15 Q22 8 15 5 Z\" \n                fill=\"#90EE90\" stroke=\"#7CCD7C\" stroke-width=\"1\"/>\n          <path d=\"M15 8 Q10 10 9 15 Q10 20 15 22 Q20 20 21 15 Q20 10 15 8 Z\" \n                fill=\"#98FB98\"/>\n          <path d=\"M15 8 L15 22\" stroke=\"#7CCD7C\" stroke-width=\"0.5\"/>\n          <path d=\"M12 10 Q15 12 12 18\" stroke=\"#7CCD7C\" stroke-width=\"0.5\" fill=\"none\"/>\n          <path d=\"M18 10 Q15 12 18 18\" stroke=\"#7CCD7C\" stroke-width=\"0.5\" fill=\"none\"/>\n          <ellipse cx=\"15\" cy=\"15\" rx=\"3\" ry=\"4\" fill=\"#ADFF2F\"/>\n        </symbol>\n        \n        <symbol id=\"tomato\" viewBox=\"0 0 30 30\">\n          <circle cx=\"15\" cy=\"16\" r=\"10\" fill=\"#FF6347\"/>\n          <ellipse cx=\"12\" cy=\"13\" rx=\"3\" ry=\"4\" fill=\"#FF7F50\" opacity=\"0.7\"/>\n          <ellipse cx=\"15\" cy=\"8\" rx=\"4\" ry=\"2\" fill=\"#228B22\"/>\n          <rect x=\"14\" y=\"6\" width=\"2\" height=\"3\" fill=\"#32CD32\"/>\n          <path d=\"M11 8 Q10 6 12 7 Q13 8 11 8\" fill=\"#228B22\"/>\n          <path d=\"M19 8 Q20 6 18 7 Q17 8 19 8\" fill=\"#228B22\"/>\n          <path d=\"M15 7 Q14 5 16 6 Q15 7 15 7\" fill=\"#228B22\"/>\n          <path d=\"M13 8 Q12 6 14 7 Q13 8 13 8\" fill=\"#228B22\"/>\n          <path d=\"M17 8 Q18 6 16 7 Q17 8 17 8\" fill=\"#228B22\"/>\n        </symbol>\n        \n        <symbol id=\"pepper\" viewBox=\"0 0 30 30\">\n          <path d=\"M15 6 Q10 8 8 15 Q9 22 12 26 Q15 28 18 26 Q21 22 22 15 Q20 8 15 6 Z\" \n                fill=\"#FF0000\"/>\n          <path d=\"M15 8 Q12 10 11 15 Q12 20 14 24 Q15 25 16 24 Q18 20 19 15 Q18 10 15 8 Z\" \n                fill=\"#FF4500\" opacity=\"0.6\"/>\n          <ellipse cx=\"15\" cy=\"6\" rx=\"2\" ry=\"1.5\" fill=\"#228B22\"/>\n          <rect x=\"14.5\" y=\"4\" width=\"1\" height=\"3\" fill=\"#32CD32\"/>\n          <path d=\"M15 6 Q18 8 20 12 Q19 16 17 20\" stroke=\"#DC143C\" stroke-width=\"1\" fill=\"none\"/>\n        </symbol>\n      </svg>\n    `;\n    \n    const svgContainer = document.createElement('div');\n    svgContainer.innerHTML = svgSprites;\n    document.body.appendChild(svgContainer);\n  }\n\n  private showInstructions(): void {\n    const instructions = document.createElement('div');\n    instructions.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0,0,0,0.9);\n      color: white;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n      padding: 2rem;\n      box-sizing: border-box;\n      overflow: hidden;\n    `;\n    \n    instructions.innerHTML = `\n      <div style=\"background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05)); backdrop-filter: blur(15px); border: 1px solid rgba(255,255,255,0.2); padding: 1.5rem; border-radius: 20px; width: 350px; max-width: 90vw; text-align: center; box-shadow: 0 20px 40px rgba(0,0,0,0.3);\">\n        <h1 style=\"font-size: 2rem; margin: 0 0 0.8rem 0; color: #FFD700; text-shadow: 2px 2px 4px rgba(0,0,0,0.5);\">🦫 Capybara Catcher</h1>\n        <p style=\"font-size: 1rem; margin-bottom: 1rem; color: #E0E0E0; line-height: 1.4;\">Help the hungry capybara<br>catch falling vegetables!</p>\n        <div style=\"margin: 0.8rem 0; font-size: 0.9rem;\">\n          <p><strong>Controls:</strong> Mouse/Keys/Touch</p>\n          <p><strong>Goal:</strong> Fill capybara to 100%</p>\n          <p><strong>Warning:</strong> Don't miss 3 vegetables!</p>\n        </div>\n        <div style=\"margin: 1rem 0;\">\n          <button id=\"helpButton\" style=\"\n            display: inline-block;\n            padding: 8px 16px;\n            font-size: 0.9rem;\n            background: rgba(255,255,255,0.1);\n            color: white;\n            border: 1px solid rgba(255,255,255,0.3);\n            border-radius: 15px;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(10px);\n          \" onmouseover=\"this.style.background='rgba(255,255,255,0.2)'\" onmouseout=\"this.style.background='rgba(255,255,255,0.1)'\">🥕 Vegetable Guide</button>\n        </div>\n      <button id=\"startGame\" style=\"\n        padding: 12px 24px;\n        font-size: 1.2rem;\n        background: linear-gradient(45deg, #32CD32, #228B22);\n        color: white;\n        border: none;\n        border-radius: 20px;\n        cursor: pointer;\n        margin-top: 1rem;\n        min-height: 45px;\n        min-width: 160px;\n        font-weight: bold;\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: transparent;\n        box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n        transition: all 0.2s ease;\n      \" onmousedown=\"this.style.transform='scale(0.95)'\" onmouseup=\"this.style.transform='scale(1)'\" ontouchstart=\"this.style.transform='scale(0.95)'\" ontouchend=\"this.style.transform='scale(1)'\">🎮 Start Game</button>\n      </div>\n    `;\n    \n    this.container.appendChild(instructions);\n    \n    const startButton = instructions.querySelector('#startGame') as HTMLButtonElement;\n    const helpButton = instructions.querySelector('#helpButton') as HTMLButtonElement;\n    \n    // Enhanced mobile interaction\n    const startGame = () => {\n      instructions.remove();\n      this.startGame();\n    };\n    \n    const initAudioAndStart = async (e?: Event) => {\n      if (e) e.preventDefault();\n      try {\n        // Initialize audio on first user interaction (Safari mobile fix)\n        const audioManager = (await import('./audio/AudioManager')).AudioManager.getInstance();\n        await audioManager.init();\n        // Play a test sound to unlock audio\n        await audioManager.play('click');\n      } catch (error) {\n        console.warn('Audio initialization failed:', error);\n      }\n      startGame();\n    };\n    \n    startButton.addEventListener('click', initAudioAndStart);\n    startButton.addEventListener('touchend', initAudioAndStart);\n    \n    // Help button interaction\n    helpButton.addEventListener('click', () => {\n      this.helpModal.show();\n    });\n    \n    // Add click sounds\n    startButton.addEventListener('click', () => {\n      // Audio will be initialized in GameEngine\n    });\n    \n    helpButton.addEventListener('click', () => {\n      // Audio will be initialized in GameEngine\n    });\n    \n    // Prevent background interaction\n    instructions.addEventListener('touchmove', (e) => {\n      e.preventDefault();\n    });\n    \n    instructions.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n  }\n\n  private startGame(): void {\n    if (this.gameEngine) {\n      this.gameEngine.destroy();\n    }\n    \n    this.gameEngine = new GameEngine(this.container);\n  }\n}\n\n// Initialize the game when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  new CapybaraCatcherGame();\n});\n\n// Handle window resize\nwindow.addEventListener('resize', () => {\n  // Update canvas sizes if needed\n  const canvas = document.querySelector('.particle-canvas') as HTMLCanvasElement;\n  const gameContainer = document.querySelector('.capybara-game') as HTMLElement;\n  if (canvas && gameContainer) {\n    canvas.width = gameContainer.clientWidth;\n    canvas.height = gameContainer.clientHeight;\n  }\n});"],"file":"assets/index-D69xiKU4.js"}